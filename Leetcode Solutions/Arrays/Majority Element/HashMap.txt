*************************************************************************
Time Complexity: O(n)
Space Complexity: O(n)

Using Hashmap:
The intuition behind using a hash map is to count the occurrences of each 
element in the array and then identify the element that occurs more than 
n/2 times. By storing the counts in a hash map, we can efficiently keep 
track of the occurrences of each element.
*************************************************************************

class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer,Integer> map = new HashMap<>();
        int count;


        for(int i = 0; i < nums.length; i++){
            map.put(nums[i], map.getOrDefault(nums[i],0)+1);
            count=map.get(nums[i]);
            if(count>nums.length/2)
            {
                return nums[i];
            }
        }

        return 0;
    }
}